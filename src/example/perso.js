// Generated by CoffeeScript 1.4.0
(function() {
  var Perso, textures,
    _this = this;

  Perso = (function() {

    function Perso(data, textures, initAnim) {
      var anim, animName, img, toturl, _i, _len, _ref;
      this.anims = {};
      for (animName in data) {
        anim = data[animName];
        this.anims[animName] = {
          "name": animName,
          "leadTo": anim.leadTo,
          "imgs": [],
          "nb": anim.imgs.length
        };
        _ref = anim.imgs;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          img = _ref[_i];
          toturl = anim.dir + img.file;
          if (!toturl in this.textures) {
            this.textures[toturl] = PIXI.Texture.fromImage(toturl);
          }
          img.texture = this.textures[toturl];
          this.anims[animName].imgs.push(img);
        }
      }
      this.currentAnim = this.anims[initAnim];
      this.nextAnim = null;
      this.currentImg = 0;
      this.sprite = new PIXI.Sprite(this.currentAnim.imgs[this.currentImg].texture);
      this.lastTime = 0;
    }

    Perso.prototype.loadAnimation = function(anim, force) {
      if (force == null) {
        force = false;
      }
      this.nextAnim = anim;
      if (force) {
        this.currentImg = this.currentAnim.nb - 1;
        return this.nextImg();
      }
    };

    Perso.prototype.nextImg = function() {
      this.currentImg++;
      if (this.currentImg >= this.currentAnim.nb) {
        this.currentImg = 0;
        if (this.nextAnim !== null) {
          this.currentAnim = this.anims[this.nextAnim];
          this.nextAnim = null;
        } else if (this.currentAnim.leadTo !== this.currentAnim.name) {
          this.currentAnim = this.anims[this.currentAnim.leadTo];
        }
      }
      return this.sprite.setTexture(this.currentAnim.imgs[this.currentImg].texture);
    };

    Perso.prototype.updateAnimation = function(dt) {
      this.lastTime += dt;
      if (this.lastTime >= this.currentAnim.imgs[this.currentImg].duration) {
        this.nextImg();
        return this.lastTime -= this.currentAnim.imgs[this.currentImg].duration;
      }
    };

    return Perso;

  })();

  textures = {};

  $.getJSON("anims/themagnet.json", function(data) {
    var p;
    return p = new Perso(data, textures, "standing");
  });

}).call(this);
